<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.netease.music.dao.mapper.PlayListPOMapper" >
  <resultMap id="BaseResultMap" type="com.netease.music.dao.po.PlayListPO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="resource_id" property="resourceId" jdbcType="BIGINT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="crawling_status" property="crawlingStatus" jdbcType="TINYINT" typeHandler="com.netease.music.dao.typehandler.CrawlingStatusEnumHandler" />
    <result column="play_count" property="playCount" jdbcType="INTEGER" />
    <result column="favorites_count" property="favoritesCount" jdbcType="INTEGER" />
    <result column="forward_count" property="forwardCount" jdbcType="INTEGER" />
    <result column="comment_count" property="commentCount" jdbcType="INTEGER" />
    <result column="song_count" property="songCount" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="db_update_time" property="dbUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.crawlingStatusCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler} and #{criterion.secondValue,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.crawlingStatusCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler} and #{criterion.secondValue,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, resource_id, url, title, crawling_status, play_count, favorites_count, forward_count, 
    comment_count, song_count, create_time, create_user_id, create_user_name, db_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.netease.music.dao.po.PlayListPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from play_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pageInfo != null" >
      limit #{pageInfo.offset} , #{pageInfo.pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from play_list
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from play_list
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.netease.music.dao.po.PlayListPO" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into play_list (resource_id, url, title, 
      crawling_status, 
      play_count, favorites_count, forward_count, 
      comment_count, song_count, create_time, 
      create_user_id, create_user_name, db_update_time
      )
    values (#{resourceId,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{crawlingStatus,jdbcType=TINYINT,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler}, 
      #{playCount,jdbcType=INTEGER}, #{favoritesCount,jdbcType=INTEGER}, #{forwardCount,jdbcType=INTEGER}, 
      #{commentCount,jdbcType=INTEGER}, #{songCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=BIGINT}, #{createUserName,jdbcType=VARCHAR}, #{dbUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.netease.music.dao.po.PlayListPO" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into play_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="crawlingStatus != null" >
        crawling_status,
      </if>
      <if test="playCount != null" >
        play_count,
      </if>
      <if test="favoritesCount != null" >
        favorites_count,
      </if>
      <if test="forwardCount != null" >
        forward_count,
      </if>
      <if test="commentCount != null" >
        comment_count,
      </if>
      <if test="songCount != null" >
        song_count,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="dbUpdateTime != null" >
        db_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resourceId != null" >
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="crawlingStatus != null" >
        #{crawlingStatus,jdbcType=TINYINT,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler},
      </if>
      <if test="playCount != null" >
        #{playCount,jdbcType=INTEGER},
      </if>
      <if test="favoritesCount != null" >
        #{favoritesCount,jdbcType=INTEGER},
      </if>
      <if test="forwardCount != null" >
        #{forwardCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null" >
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="songCount != null" >
        #{songCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="dbUpdateTime != null" >
        #{dbUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.netease.music.dao.po.PlayListPOExample" resultType="java.lang.Integer" >
    select count(*) from play_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update play_list
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.resourceId != null" >
        resource_id = #{record.resourceId,jdbcType=BIGINT},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.crawlingStatus != null" >
        crawling_status = #{record.crawlingStatus,jdbcType=TINYINT,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler},
      </if>
      <if test="record.playCount != null" >
        play_count = #{record.playCount,jdbcType=INTEGER},
      </if>
      <if test="record.favoritesCount != null" >
        favorites_count = #{record.favoritesCount,jdbcType=INTEGER},
      </if>
      <if test="record.forwardCount != null" >
        forward_count = #{record.forwardCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null" >
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.songCount != null" >
        song_count = #{record.songCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createUserName != null" >
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.dbUpdateTime != null" >
        db_update_time = #{record.dbUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update play_list
    set id = #{record.id,jdbcType=BIGINT},
      resource_id = #{record.resourceId,jdbcType=BIGINT},
      url = #{record.url,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      crawling_status = #{record.crawlingStatus,jdbcType=TINYINT,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler},
      play_count = #{record.playCount,jdbcType=INTEGER},
      favorites_count = #{record.favoritesCount,jdbcType=INTEGER},
      forward_count = #{record.forwardCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      song_count = #{record.songCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      db_update_time = #{record.dbUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.netease.music.dao.po.PlayListPO" >
    update play_list
    <set >
      <if test="resourceId != null" >
        resource_id = #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="crawlingStatus != null" >
        crawling_status = #{crawlingStatus,jdbcType=TINYINT,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler},
      </if>
      <if test="playCount != null" >
        play_count = #{playCount,jdbcType=INTEGER},
      </if>
      <if test="favoritesCount != null" >
        favorites_count = #{favoritesCount,jdbcType=INTEGER},
      </if>
      <if test="forwardCount != null" >
        forward_count = #{forwardCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null" >
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="songCount != null" >
        song_count = #{songCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="dbUpdateTime != null" >
        db_update_time = #{dbUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netease.music.dao.po.PlayListPO" >
    update play_list
    set resource_id = #{resourceId,jdbcType=BIGINT},
      url = #{url,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      crawling_status = #{crawlingStatus,jdbcType=TINYINT,typeHandler=com.netease.music.dao.typehandler.CrawlingStatusEnumHandler},
      play_count = #{playCount,jdbcType=INTEGER},
      favorites_count = #{favoritesCount,jdbcType=INTEGER},
      forward_count = #{forwardCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      song_count = #{songCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      db_update_time = #{dbUpdateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>